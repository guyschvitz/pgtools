??dbConnect
??dbListTables
library(pgtools)
library(pgtools)
pgViewTables
##' Remove locks from postgres tables
##'
##' Function finds and removes all locks from tables that match search terms,
##' helps to avoid sending queries that hang without returning results
##'
##' @param conn \code{DBI} connection object
##' @param table regular expression for table name (case insensitive)
##'
##' @export data.frame with table and schema names
##'
pgRemoveLocks <- function(conn, table){
locks <- dbGetQuery(conn, statement =  paste0("select pid from pg_locks l join
pg_class t on l.relation = t.oid where t.relkind = 'r' and t.relname LIKE '%",
table, "%';"))
if(nrow(locks)==0){
print("No locks found")
} else {
lapply(1:nrow(locks),
function(x){dbSendQuery(con,
statement = paste0("SELECT pg_cancel_backend(",
locks[x,], ")"))})
print(nrow(locks),  "locks removed")
}
}
library(pgtools)
########################################
# INITIALIZE #########
rm(list = ls())
# Set working directory
# setwd("T:/Desktop/Code/nastac_ethnic_match")
setwd("~/Documents/ICR/subversion/nastac/nastac_ethnic_match/")
# Load functions
source("scripts/coding/transfer_coding.R")
# Set path to matching tables
table.dir <- "matching_tables/"
# TRANSFER CODING ############
#' Function transfers the hand-coded matches from all lists to the column "auto_match_prev"
#' in all lists. It is used to keep the amount of duplicated work at a minimum.
transfer_coding(map = "bav_nic_1", table.dir = table.dir, fuzzy = TRUE)
# CHECK CODING ###############
#' Function checks the validity of all hand.coded matches.
#' In particular, it is checked, whether each match is contained in the original Ethnologue data,
#' at the level indicated in the match file (if applicable).
#' Also, the function returns summary statistics on how many groups per list hasve been matched so far.
check_coding(map = "bnf_rob_16", table.dir = table.dir)
# CHECK CODING ###############
#' Function checks the validity of all hand.coded matches.
#' In particular, it is checked, whether each match is contained in the original Ethnologue data,
#' at the level indicated in the match file (if applicable).
#' Also, the function returns summary statistics on how many groups per list hasve been matched so far.
check_coding(map = "bav_nic_1", table.dir = table.dir)
show_coding(group = c("Kazak"), fuzzy = TRUE, table.dir = table.dir)
# ... show all entries which have been matched to a particular language
show_matches_of(language = c("Kazak"), table.dir = table.dir)
# ... show //all// ethno-logue matches to a particular group name (works across borders)
auto_match_all(group = "Kazak", table.dir = table.dir)
# ... search for specific Ethnologue Group(s)
search_ethnologue(groups = c("Kaz", "Taj", "Tadj"), table.dir = table.dir, view = T)
# ... search for specific Ethnologue Group(s)
search_ethnologue(groups = c("Kazakh"), table.dir = table.dir, view = T)
# CHECK CODING ###############
#' Function checks the validity of all hand.coded matches.
#' In particular, it is checked, whether each match is contained in the original Ethnologue data,
#' at the level indicated in the match file (if applicable).
#' Also, the function returns summary statistics on how many groups per list hasve been matched so far.
check_coding(map = "bav_nic_1", table.dir = table.dir)
# CHECK CODING ###############
#' Function checks the validity of all hand.coded matches.
#' In particular, it is checked, whether each match is contained in the original Ethnologue data,
#' at the level indicated in the match file (if applicable).
#' Also, the function returns summary statistics on how many groups per list hasve been matched so far.
check_coding(map = "bav_nic_1", table.dir = table.dir)
show_coding(group = c("Kazak"), fuzzy = TRUE, table.dir = table.dir)
# ... show hand-coded matches for specific groups in all maps
show_coding(group = c("Kaz"), fuzzy = TRUE, table.dir = table.dir)
# ... show hand-coded matches for specific groups in all maps
show_coding(group = c("Taj"), fuzzy = TRUE, table.dir = table.dir)
# ... show hand-coded matches for specific groups in all maps
show_coding(group = c("Tajiks"), fuzzy = TRUE, table.dir = table.dir)
show_coding
